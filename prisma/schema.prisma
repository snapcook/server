// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String         @id @default(cuid())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  email     String         @unique
  name      String         @unique
  password  String
  photo     String
  slug      String         @unique
  role      Role           @default(USER)
  recipes   Recipe[]
  notes     ShoppingNote[]
  bookmarks Bookmarks[]
}

enum RecipeMainCategory {
  Makanan
  Minuman
}

model RecipeCategory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  slug      String   @unique
  photo     String
  recipes   Recipe[]
}

model Utensil {
  id        String          @id @default(cuid())
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  name      String          @unique
  photo     String
  recipes   RecipeUtensil[]
}

model RecipeUtensil {
  recipeId   String
  recipe     Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  utensilId  String
  utensil    Utensil  @relation(fields: [utensilId], references: [id])
  assignedAt DateTime @default(now())
  updatedAt  DateTime @updatedAt
  assignedBy String

  @@id([recipeId, utensilId])
}

model Recipe {
  id                String             @id @default(cuid())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  mainCategory      RecipeMainCategory
  secondCategoryId  String
  secondCategory    RecipeCategory     @relation(fields: [secondCategoryId], references: [id])
  authorId          String
  author            User               @relation(fields: [authorId], references: [id])
  title             String
  photo             String
  description       String
  slug              String             @unique
  totalServing      Int
  mainIngredients   String[]
  fullIngredients   String[]
  searchIngredients String
  spices            String[]
  utensils          RecipeUtensil[]
  estimatedTime     Int
  steps             String[]
  bookmarks         Bookmarks[]
}

model ShoppingNote {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
  title       String
  description String[]
}

model Bookmarks {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  recipeId  String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
}
